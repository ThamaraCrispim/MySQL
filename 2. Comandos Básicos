# Inserindo Dados na Tabela (INSERT INTO)

## Inserção de Dados na Tabela `pessoas`

Este código SQL realiza duas operações principais: inserção de dados na tabela `pessoas` e seleção de todos os dados da tabela `pessoas`.

### Adicionando a Pessoa 'Gobofredo'

```sql
INSERT INTO pessoas 
(nome, nascimento, sexo, peso, altura, nacionalidade)
VALUES
('Gobofredo', '1984-01-02', 'M', '78.5', '1.83', 'Brasil');

Este comando insere uma pessoa com os seguintes dados:

Nome: Gobofredo
Data de Nascimento: 02 de janeiro de 1984
Sexo: Masculino (M)
Peso: 78.5 kg
Altura: 1.83 m
Nacionalidade: Brasil
Seleção de Todos os Dados


SELECT * FROM pessoas;

Este comando retorna todas as colunas de todas as linhas da tabela pessoas.

Adicionando a Pessoa 'Gisele'


INSERT INTO pessoas 
(nome, nascimento, sexo, peso, altura, nacionalidade)
VALUES
('Gisele', '1984-12-30', 'F', '55.5', '1.60', 'Portugal');
Este comando insere outra pessoa com os seguintes dados:

Nome: Gisele
Data de Nascimento: 30 de dezembro de 1984
Sexo: Feminino (F)
Peso: 55.5 kg
Altura: 1.60 m
Nacionalidade: Portugal

Seleção de Todos os Dados

SELECT * FROM pessoas;
Este comando retorna todas as colunas de todas as linhas da tabela pessoas.

Inserção de Dados Simplificada
Quando o comando INSERT INTO é utilizado sem especificar as colunas, o MySQL assume que os valores fornecidos correspondem exatamente à ordem das colunas na tabela. Por exemplo:


INSERT INTO pessoas 
VALUES
('Gisele', '1984-12-30', 'F', '55.5', '1.60', 'Portugal');
Inserção de Múltiplas Linhas


-- Inserindo múltiplas linhas na tabela 'pessoas'
INSERT INTO pessoas 
VALUES
('Gisele', '1984-12-30', 'F', '55.5', '1.60', 'Portugal'),
('Gobofredo', '1984-01-02', 'M', '78.5', '1.83', 'Brasil');

-- Selecionando todos os dados da tabela 'pessoas'

SELECT * FROM pessoas;

Explicação
Comando INSERT INTO: Adiciona múltiplas linhas de uma vez.
Valores: Cada conjunto de valores entre parênteses representa uma linha a ser inserida.
Separação: Os conjuntos de valores são separados por vírgulas.
Classificação dos Comandos como DML
Os comandos SQL fornecidos são exemplos de DML (Data Manipulation Language). DML é uma subcategoria da linguagem SQL utilizada para manipular dados dentro das tabelas de um banco de dados. Os principais comandos DML incluem:

INSERT INTO: Utilizado para adicionar novos dados às tabelas.
UPDATE: Modifica dados já existentes nas tabelas.
DELETE: Remove dados das tabelas.
SELECT: Consulta e recupera dados das tabelas.

# Alterando a Estrutura da Tabela (ALTER TABLE e DROP TABLE)

### Conteúdo do `alter_table_commands.sql`

```sql
USE cadastro;
DESC pessoas;

-- Adicionar uma coluna
ALTER TABLE pessoas
ADD COLUMN `profissão` VARCHAR(255);

-- Selecionar todas as colunas da tabela
SELECT * FROM pessoas;

-- Eliminar uma coluna
ALTER TABLE pessoas
DROP COLUMN profissão;

-- Adicionar tabela de novo, porém em outra posição
ALTER TABLE pessoas
ADD COLUMN profissão VARCHAR(10) AFTER nome;

-- Colocar coluna em primeiro lugar
ALTER TABLE pessoas
ADD COLUMN codigo INT FIRST;

-- Mudar o tamanho do espaço
ALTER TABLE pessoas
MODIFY COLUMN profissão VARCHAR(20);

#criar um nova tabela:
CREATE TABLE IF NOT EXISTS cursos (
    nome VARCHAR(30) NOT NULL UNIQUE,
    descricao TEXT,
    carga INT UNSIGNED,
    totaulas INT,
    ano YEAR DEFAULT '2024'
) DEFAULT CHARSET = utf8;

-- Mudar o nome de uma coluna
ALTER TABLE pessoas
CHANGE COLUMN profissão prof VARCHAR(20);
